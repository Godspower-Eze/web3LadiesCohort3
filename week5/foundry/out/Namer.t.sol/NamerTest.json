{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUpdateName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b50610d448061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806303ee16c01461005c5780630a9254e414610066578063ba414fa61461006e578063cc8668de1461008a578063fa7626d414610092575b600080fd5b61006461009f565b005b610064610316565b610076610367565b604051901515815260200160405180910390f35b610064610492565b6000546100769060ff1681565b610148600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011d919081019061078a565b6040518060400160405280600d81526020016c476f6473706f77657220457a6560981b8152506104ea565b6000546040516384da92a760e01b815260206004820152600660248201526542616b61726560d01b6044820152620100009091046001600160a01b0316906384da92a790606401600060405180830381600087803b1580156101a957600080fd5b505af11580156101bd573d6000803e3d6000fd5b50505050610263600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610217573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023f919081019061078a565b6040518060400160405280600681526020016542616b61726560d01b8152506104ea565b7f0b2e13ff20ac7b474198655583edf70dedd2c1dc980e329c4fbb2fc0748b796b600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ff919081019061078a565b60405161030c9190610863565b60405180910390a1565b60405161032290610737565b604051809103906000f08015801561033e573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b60008054610100900460ff16156103875750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561048d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610415917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161087d565b60408051601f198184030181529082905261042f916108ae565b6000604051808303816000865af19150503d806000811461046c576040519150601f19603f3d011682016040523d82523d6000602084013e610471565b606091505b509150508080602001905181019061048991906108ca565b9150505b919050565b6104e8600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100f5573d6000803e3d6000fd5b565b806040516020016104fb91906108ae565b604051602081830303815290604052805190602001208260405160200161052291906108ae565b6040516020818303038152906040528051906020012014610627577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105a99060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516105e091906108ec565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516106179190610920565b60405180910390a161062761062b565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107265760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526106c5929160200161087d565b60408051601f19818403018152908290526106df916108ae565b6000604051808303816000865af19150503d806000811461071c576040519150601f19603f3d011682016040523d82523d6000602084013e610721565b606091505b505050505b6000805461ff001916610100179055565b6103e38061095583390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561077557818101518382015260200161075d565b83811115610784576000848401525b50505050565b60006020828403121561079c57600080fd5b815167ffffffffffffffff808211156107b457600080fd5b818401915084601f8301126107c857600080fd5b8151818111156107da576107da610744565b604051601f8201601f19908116603f0116810190838211818310171561080257610802610744565b8160405282815287602084870101111561081b57600080fd5b61082c83602083016020880161075a565b979650505050505050565b6000815180845261084f81602086016020860161075a565b601f01601f19169290920160200192915050565b6020815260006108766020830184610837565b9392505050565b6001600160e01b03198316815281516000906108a081600485016020870161075a565b919091016004019392505050565b600082516108c081846020870161075a565b9190910192915050565b6000602082840312156108dc57600080fd5b8151801515811461087657600080fd5b60408152600a6040820152690808115e1c1958dd195960b21b60608201526080602082015260006108766080830184610837565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000610876608083018461083756fe608060405234801561001057600080fd5b5060408051808201909152600d8082526c476f6473706f77657220457a6560981b60209092019182526100459160009161004b565b5061011f565b828054610057906100e4565b90600052602060002090601f01602090048101928261007957600085556100bf565b82601f1061009257805160ff19168380011785556100bf565b828001600101855582156100bf579182015b828111156100bf5782518255916020019190600101906100a4565b506100cb9291506100cf565b5090565b5b808211156100cb57600081556001016100d0565b600181811c908216806100f857607f821691505b6020821081141561011957634e487b7160e01b600052602260045260246000fd5b50919050565b6102b58061012e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806384da92a714610059575b600080fd5b61004361006e565b60405161005091906101a6565b60405180910390f35b61006c6100673660046101fb565b6100fc565b005b6000805461007b9061026d565b80601f01602080910402602001604051908101604052809291908181526020018280546100a79061026d565b80156100f45780601f106100c9576101008083540402835291602001916100f4565b820191906000526020600020905b8154815290600101906020018083116100d757829003601f168201915b505050505081565b6101086000838361010d565b505050565b8280546101199061026d565b90600052602060002090601f01602090048101928261013b5760008555610181565b82601f106101545782800160ff19823516178555610181565b82800160010185558215610181579182015b82811115610181578235825591602001919060010190610166565b5061018d929150610191565b5090565b5b8082111561018d5760008155600101610192565b600060208083528351808285015260005b818110156101d3578581018301518582016040015282016101b7565b818111156101e5576000604083870101525b50601f01601f1916929092016040019392505050565b6000806020838503121561020e57600080fd5b823567ffffffffffffffff8082111561022657600080fd5b818501915085601f83011261023a57600080fd5b81358181111561024957600080fd5b86602082850101111561025b57600080fd5b60209290920196919550909350505050565b600181811c9082168061028157607f821691505b602082108114156102a257634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "115:427:2:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;115:427:2;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806303ee16c01461005c5780630a9254e414610066578063ba414fa61461006e578063cc8668de1461008a578063fa7626d414610092575b600080fd5b61006461009f565b005b610064610316565b610076610367565b604051901515815260200160405180910390f35b610064610492565b6000546100769060ff1681565b610148600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011d919081019061078a565b6040518060400160405280600d81526020016c476f6473706f77657220457a6560981b8152506104ea565b6000546040516384da92a760e01b815260206004820152600660248201526542616b61726560d01b6044820152620100009091046001600160a01b0316906384da92a790606401600060405180830381600087803b1580156101a957600080fd5b505af11580156101bd573d6000803e3d6000fd5b50505050610263600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610217573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023f919081019061078a565b6040518060400160405280600681526020016542616b61726560d01b8152506104ea565b7f0b2e13ff20ac7b474198655583edf70dedd2c1dc980e329c4fbb2fc0748b796b600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ff919081019061078a565b60405161030c9190610863565b60405180910390a1565b60405161032290610737565b604051809103906000f08015801561033e573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b60008054610100900460ff16156103875750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561048d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610415917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161087d565b60408051601f198184030181529082905261042f916108ae565b6000604051808303816000865af19150503d806000811461046c576040519150601f19603f3d011682016040523d82523d6000602084013e610471565b606091505b509150508080602001905181019061048991906108ca565b9150505b919050565b6104e8600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100f5573d6000803e3d6000fd5b565b806040516020016104fb91906108ae565b604051602081830303815290604052805190602001208260405160200161052291906108ae565b6040516020818303038152906040528051906020012014610627577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105a99060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516105e091906108ec565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516106179190610920565b60405180910390a161062761062b565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107265760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526106c5929160200161087d565b60408051601f19818403018152908290526106df916108ae565b6000604051808303816000865af19150503d806000811461071c576040519150601f19603f3d011682016040523d82523d6000602084013e610721565b606091505b505050505b6000805461ff001916610100179055565b6103e38061095583390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561077557818101518382015260200161075d565b83811115610784576000848401525b50505050565b60006020828403121561079c57600080fd5b815167ffffffffffffffff808211156107b457600080fd5b818401915084601f8301126107c857600080fd5b8151818111156107da576107da610744565b604051601f8201601f19908116603f0116810190838211818310171561080257610802610744565b8160405282815287602084870101111561081b57600080fd5b61082c83602083016020880161075a565b979650505050505050565b6000815180845261084f81602086016020860161075a565b601f01601f19169290920160200192915050565b6020815260006108766020830184610837565b9392505050565b6001600160e01b03198316815281516000906108a081600485016020870161075a565b919091016004019392505050565b600082516108c081846020870161075a565b9190910192915050565b6000602082840312156108dc57600080fd5b8151801515811461087657600080fd5b60408152600a6040820152690808115e1c1958dd195960b21b60608201526080602082015260006108766080830184610837565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000610876608083018461083756fe608060405234801561001057600080fd5b5060408051808201909152600d8082526c476f6473706f77657220457a6560981b60209092019182526100459160009161004b565b5061011f565b828054610057906100e4565b90600052602060002090601f01602090048101928261007957600085556100bf565b82601f1061009257805160ff19168380011785556100bf565b828001600101855582156100bf579182015b828111156100bf5782518255916020019190600101906100a4565b506100cb9291506100cf565b5090565b5b808211156100cb57600081556001016100d0565b600181811c908216806100f857607f821691505b6020821081141561011957634e487b7160e01b600052602260045260246000fd5b50919050565b6102b58061012e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806384da92a714610059575b600080fd5b61004361006e565b60405161005091906101a6565b60405180910390f35b61006c6100673660046101fb565b6100fc565b005b6000805461007b9061026d565b80601f01602080910402602001604051908101604052809291908181526020018280546100a79061026d565b80156100f45780601f106100c9576101008083540402835291602001916100f4565b820191906000526020600020905b8154815290600101906020018083116100d757829003601f168201915b505050505081565b6101086000838361010d565b505050565b8280546101199061026d565b90600052602060002090601f01602090048101928261013b5760008555610181565b82601f106101545782800160ff19823516178555610181565b82800160010185558215610181579182015b82811115610181578235825591602001919060010190610166565b5061018d929150610191565b5090565b5b8082111561018d5760008155600101610192565b600060208083528351808285015260005b818110156101d3578581018301518582016040015282016101b7565b818111156101e5576000604083870101525b50601f01601f1916929092016040019392505050565b6000806020838503121561020e57600080fd5b823567ffffffffffffffff8082111561022657600080fd5b818501915085601f83011261023a57600080fd5b81358181111561024957600080fd5b86602082850101111561025b57600080fd5b60209290920196919550909350505050565b600181811c9082168061028157607f821691505b602082108114156102a257634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "115:427:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:210;;;:::i;:::-;;169:61;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:3;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;236:84:2;;;:::i;1572:26:0:-;;;;;;;;;330:210:2;373:40;382:6;;;;;;;;;-1:-1:-1;;;;;382:6:2;-1:-1:-1;;;;;382:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;382:13:2;;;;;;;;;;;;:::i;:::-;373:40;;;;;;;;;;;;;-1:-1:-1;;;373:40:2;;;:8;:40::i;:::-;423:6;;:27;;-1:-1:-1;;;423:27:2;;1692:2:3;423:27:2;;;1674:21:3;1731:1;1711:18;;;1704:29;-1:-1:-1;;;1749:18:3;;;1742:36;423:6:2;;;;-1:-1:-1;;;;;423:6:2;;:17;;1795:18:3;;423:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:33;469:6;;;;;;;;;-1:-1:-1;;;;;469:6:2;-1:-1:-1;;;;;469:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:13:2;;;;;;;;;;;;:::i;:::-;460:33;;;;;;;;;;;;;-1:-1:-1;;;460:33:2;;;:8;:33::i;:::-;508:25;519:6;;;;;;;;;-1:-1:-1;;;;;519:6:2;-1:-1:-1;;;;;519:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;519:13:2;;;;;;;;;;;;:::i;:::-;508:25;;;;;;:::i;:::-;;;;;;;;330:210::o;169:61::-;212:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;203:6;;:20;;;;;-1:-1:-1;;;;;203:20:2;;;;;-1:-1:-1;;;;;203:20:2;;;;;;169:61::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2486:51:3;;;-1:-1:-1;;;2553:18:3;;;2546:34;2196:43:0;;;;;;;;;2459:18:3;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;236:84:2:-;273:40;282:6;;;;;;;;;-1:-1:-1;;;;;282:6:2;-1:-1:-1;;;;;282:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:40;236:84::o;14688:344:0:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;4011:2:3;3993:21;;;4050:2;4030:18;;;4023:30;4089:34;4084:2;4069:18;;4062:62;-1:-1:-1;;;4155:2:3;4140:18;;4133:34;4199:3;4184:19;;3809:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;5330:51:3;;;-1:-1:-1;;;5397:18:3;;;5390:34;;;;2705:4:0;5440:18:3;;;5433:34;2482:11:0;;1671:64;2579:43;;5303:18:3;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;206:127:3:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:258;410:1;420:113;434:6;431:1;428:13;420:113;;;510:11;;;504:18;491:11;;;484:39;456:2;449:10;420:113;;;551:6;548:1;545:13;542:48;;;586:1;577:6;572:3;568:16;561:27;542:48;;338:258;;;:::o;601:884::-;681:6;734:2;722:9;713:7;709:23;705:32;702:52;;;750:1;747;740:12;702:52;783:9;777:16;812:18;853:2;845:6;842:14;839:34;;;869:1;866;859:12;839:34;907:6;896:9;892:22;882:32;;952:7;945:4;941:2;937:13;933:27;923:55;;974:1;971;964:12;923:55;1003:2;997:9;1025:2;1021;1018:10;1015:36;;;1031:18;;:::i;:::-;1106:2;1100:9;1074:2;1160:13;;-1:-1:-1;;1156:22:3;;;1180:2;1152:31;1148:40;1136:53;;;1204:18;;;1224:22;;;1201:46;1198:72;;;1250:18;;:::i;:::-;1290:10;1286:2;1279:22;1325:2;1317:6;1310:18;1365:7;1360:2;1355;1351;1347:11;1343:20;1340:33;1337:53;;;1386:1;1383;1376:12;1337:53;1399:55;1451:2;1446;1438:6;1434:15;1429:2;1425;1421:11;1399:55;:::i;:::-;1473:6;601:884;-1:-1:-1;;;;;;;601:884:3:o;1824:258::-;1866:3;1904:5;1898:12;1931:6;1926:3;1919:19;1947:63;2003:6;1996:4;1991:3;1987:14;1980:4;1973:5;1969:16;1947:63;:::i;:::-;2064:2;2043:15;-1:-1:-1;;2039:29:3;2030:39;;;;2071:4;2026:50;;1824:258;-1:-1:-1;;1824:258:3:o;2087:220::-;2236:2;2225:9;2218:21;2199:4;2256:45;2297:2;2286:9;2282:18;2274:6;2256:45;:::i;:::-;2248:53;2087:220;-1:-1:-1;;;2087:220:3:o;2591:371::-;-1:-1:-1;;;;;;2776:33:3;;2764:46;;2833:13;;2746:3;;2855:61;2833:13;2905:1;2896:11;;2889:4;2877:17;;2855:61;:::i;:::-;2936:16;;;;2954:1;2932:24;;2591:371;-1:-1:-1;;;2591:371:3:o;2967:274::-;3096:3;3134:6;3128:13;3150:53;3196:6;3191:3;3184:4;3176:6;3172:17;3150:53;:::i;:::-;3219:16;;;;;2967:274;-1:-1:-1;;2967:274:3:o;3246:277::-;3313:6;3366:2;3354:9;3345:7;3341:23;3337:32;3334:52;;;3382:1;3379;3372:12;3334:52;3414:9;3408:16;3467:5;3460:13;3453:21;3446:5;3443:32;3433:60;;3489:1;3486;3479:12;4214:452;4464:2;4453:9;4446:21;4503:2;4498;4487:9;4483:18;4476:30;-1:-1:-1;;;4537:2:3;4526:9;4522:18;4515:40;4593:3;4586:4;4575:9;4571:20;4564:33;4427:4;4614:46;4655:3;4644:9;4640:19;4632:6;4614:46;:::i;4671:452::-;4921:2;4910:9;4903:21;4960:2;4955;4944:9;4940:18;4933:30;-1:-1:-1;;;4994:2:3;4983:9;4979:18;4972:40;5050:3;5043:4;5032:9;5028:20;5021:33;4884:4;5071:46;5112:3;5101:9;5097:19;5089:6;5071:46;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/godspowereze/Documents/Projects/web3LadiesCohort3/week5/foundry/src/test/Namer.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "Namer": [
        1809
      ],
      "NamerTest": [
        1871
      ]
    },
    "id": 1872,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1811,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:2"
      },
      {
        "absolutePath": "/Users/godspowereze/Documents/Projects/web3LadiesCohort3/week5/foundry/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 1812,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1787,
        "src": "64:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/godspowereze/Documents/Projects/web3LadiesCohort3/week5/foundry/src/Test.sol",
        "file": "src/Test.sol",
        "id": 1813,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1810,
        "src": "91:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1814,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "137:6:2"
            },
            "id": 1815,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:2"
          }
        ],
        "canonicalName": "NamerTest",
        "contractDependencies": [
          1809
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1871,
        "linearizedBaseContracts": [
          1871,
          1786
        ],
        "name": "NamerTest",
        "nameLocation": "124:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1818,
            "mutability": "mutable",
            "name": "_namer",
            "nameLocation": "156:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "150:12:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Namer_$1809",
              "typeString": "contract Namer"
            },
            "typeName": {
              "id": 1817,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1816,
                "name": "Namer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1809,
                "src": "150:5:2"
              },
              "referencedDeclaration": 1809,
              "src": "150:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Namer_$1809",
                "typeString": "contract Namer"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "193:37:2",
              "statements": [
                {
                  "expression": {
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1821,
                      "name": "_namer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "203:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Namer_$1809",
                        "typeString": "contract Namer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "212:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Namer_$1809_$",
                          "typeString": "function () returns (contract Namer)"
                        },
                        "typeName": {
                          "id": 1823,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1822,
                            "name": "Namer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1809,
                            "src": "216:5:2"
                          },
                          "referencedDeclaration": 1809,
                          "src": "216:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Namer_$1809",
                            "typeString": "contract Namer"
                          }
                        }
                      },
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "212:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Namer_$1809",
                        "typeString": "contract Namer"
                      }
                    },
                    "src": "203:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Namer_$1809",
                      "typeString": "contract Namer"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "203:20:2"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "178:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:2"
            },
            "returnParameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:2"
            },
            "scope": 1871,
            "src": "169:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1839,
              "nodeType": "Block",
              "src": "263:57:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1833,
                            "name": "_namer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "282:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Namer_$1809",
                              "typeString": "contract Namer"
                            }
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1790,
                          "src": "282:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "282:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "476f6473706f77657220457a65",
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "297:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78837c6aa2a50af47a78f8aa2f7c813762ab699a114c2c3120bd113b34b12270",
                          "typeString": "literal_string \"Godspower Eze\""
                        },
                        "value": "Godspower Eze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78837c6aa2a50af47a78f8aa2f7c813762ab699a114c2c3120bd113b34b12270",
                          "typeString": "literal_string \"Godspower Eze\""
                        }
                      ],
                      "id": 1832,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "273:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "273:40:2"
                }
              ]
            },
            "functionSelector": "cc8668de",
            "id": 1840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testName",
            "nameLocation": "245:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:2:2"
            },
            "returnParameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:0:2"
            },
            "scope": 1871,
            "src": "236:84:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1869,
              "nodeType": "Block",
              "src": "363:177:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1844,
                            "name": "_namer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "382:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Namer_$1809",
                              "typeString": "contract Namer"
                            }
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1790,
                          "src": "382:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "382:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "476f6473706f77657220457a65",
                        "id": 1847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "397:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78837c6aa2a50af47a78f8aa2f7c813762ab699a114c2c3120bd113b34b12270",
                          "typeString": "literal_string \"Godspower Eze\""
                        },
                        "value": "Godspower Eze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78837c6aa2a50af47a78f8aa2f7c813762ab699a114c2c3120bd113b34b12270",
                          "typeString": "literal_string \"Godspower Eze\""
                        }
                      ],
                      "id": 1843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "373:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "373:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1849,
                  "nodeType": "ExpressionStatement",
                  "src": "373:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "42616b617265",
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "441:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3167f1b9e82eb5f49bf92e89a559279ab3018a6134e3aabf6e4ecc741300befd",
                          "typeString": "literal_string \"Bakare\""
                        },
                        "value": "Bakare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3167f1b9e82eb5f49bf92e89a559279ab3018a6134e3aabf6e4ecc741300befd",
                          "typeString": "literal_string \"Bakare\""
                        }
                      ],
                      "expression": {
                        "id": 1850,
                        "name": "_namer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "423:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Namer_$1809",
                          "typeString": "contract Namer"
                        }
                      },
                      "id": 1852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1808,
                      "src": "423:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "423:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1857,
                            "name": "_namer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "469:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Namer_$1809",
                              "typeString": "contract Namer"
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1790,
                          "src": "469:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "469:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "42616b617265",
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "484:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3167f1b9e82eb5f49bf92e89a559279ab3018a6134e3aabf6e4ecc741300befd",
                          "typeString": "literal_string \"Bakare\""
                        },
                        "value": "Bakare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3167f1b9e82eb5f49bf92e89a559279ab3018a6134e3aabf6e4ecc741300befd",
                          "typeString": "literal_string \"Bakare\""
                        }
                      ],
                      "id": 1856,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "460:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "460:33:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1864,
                            "name": "_namer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "519:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Namer_$1809",
                              "typeString": "contract Namer"
                            }
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1790,
                          "src": "519:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 1866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "519:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1863,
                      "name": "log_string",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "508:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1868,
                  "nodeType": "EmitStatement",
                  "src": "503:30:2"
                }
              ]
            },
            "functionSelector": "03ee16c0",
            "id": 1870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUpdateName",
            "nameLocation": "339:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:2"
            },
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:2"
            },
            "scope": 1871,
            "src": "330:210:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1872,
        "src": "115:427:2",
        "usedErrors": []
      }
    ],
    "src": "39:504:2"
  }
}